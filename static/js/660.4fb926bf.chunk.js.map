{"version":3,"file":"static/js/660.4fb926bf.chunk.js","mappings":"4QAEaA,EAAOC,EAAAA,EAAAA,KAAH,uEAIJC,EAAaD,EAAAA,EAAAA,GAAH,+DAIVE,EAASF,EAAAA,EAAAA,OAAH,2hB,4BCAJ,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAmBN,OACE,4BACE,SAACd,EAAD,sBAEA,UAACF,EAAD,CAAMiB,SAnBW,SAACC,GACpBA,EAAEC,kBACGC,EAAAA,EAAAA,GAAcV,IACjBW,EAAAA,GAAAA,MAAY,iCAGVT,EAASU,OAAS,GACpBD,EAAAA,GAAAA,MAAY,0CAEdhB,GAASkB,EAAAA,EAAAA,IAAS,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBW,aAAa,MAA3C,WACE,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,IACPC,SAAU,OACVC,YAAa,OACbC,WAAY,QALhB,UAQE,SAACC,EAAA,EAAD,CACEL,GAAI,CACFM,aAAc,EACdC,QAAS,QACTC,aAAc,GAEhBC,WAAS,EACTC,MAAM,OACNC,GAAG,OACHC,KAAK,OACL9B,KAAK,OACLQ,MAAOR,EACP+B,SAAUzB,EACV0B,KAAK,QACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,SAAClB,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,IACPC,SAAU,OACVC,YAAa,OACbC,WAAY,OACZc,aAAc,IANlB,UASE,SAACb,EAAA,EAAD,CACEL,GAAI,CACFM,aAAc,EACdC,QAAS,QACTC,aAAc,GAEhBC,WAAS,EACTC,MAAM,QACNC,GAAG,QACHC,KAAK,QACL9B,KAAK,QACLQ,MAAON,EACP6B,SAAUzB,EACV0B,KAAK,QACLE,MAAM,gCACNC,UAAQ,OAGZ,SAAClB,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,IACPC,SAAU,OACVC,YAAa,OACbC,WAAY,QALhB,UAQE,SAACC,EAAA,EAAD,CACEL,GAAI,CACFM,aAAc,EACdC,QAAS,QACTC,aAAc,GAEhBC,WAAS,EACTC,MAAM,WACNC,GAAG,WACHC,KAAK,WACL9B,KAAK,WACLQ,MAAOJ,EACP2B,SAAUzB,EACV0B,KAAK,QACLE,MAAM,6CACNC,UAAQ,OAIZ,SAACxC,EAAD,CAAQmC,KAAK,SAASO,QAAQ,YAAYL,KAAK,QAA/C,kC,oBClIO,SAASM,EAAoBpC,GAG3C,MADC,wJACSqC,KAAKC,OAAOtC,GAAOuC,e","sources":["views/RegisterView/RegisterView.styled.jsx","views/RegisterView/RegisterView.jsx","views/ValidateEmail/ValidateEmail.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nexport const LoginTitle = styled.h2`\n  color: black;\n  padding-top: 20px;\n`;\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  outline: 0;\n  border: 0;\n  margin: 0;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  font-size: 0.8125rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  padding: 4px 10px;\n  border-radius: 4px;\n  color: black;\n  background-color: #c5637c;\n  &:hover {\n    background-color: #de91a4;\n    color: white;\n  }\n`;\n","import { register } from \"../../redux/auth/auth-operations\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\n//import Button from \"@mui/material/Button\";\nimport { Form, LoginTitle, Button } from \"./RegisterView.styled\";\nimport toast from \"react-hot-toast\";\nimport validateEmail from \"../ValidateEmail/ValidateEmail\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validateEmail(email)) {\n      toast.error(\"For example email@example.com\");\n    }\n\n    if (password.length < 7) {\n      toast.error(\"Password must be at least 7 chars long\");\n    }\n    dispatch(register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <LoginTitle>SignUp</LoginTitle>\n\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Box\n          sx={{\n            width: 300,\n            maxWidth: \"100%\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <TextField\n            sx={{\n              marginBottom: 3,\n              bgcolor: \"white\",\n              borderRadius: 1,\n            }}\n            fullWidth\n            label=\"Name\"\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            size=\"small\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Box>\n        <Box\n          sx={{\n            width: 300,\n            maxWidth: \"100%\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n            padingBottom: 20,\n          }}\n        >\n          <TextField\n            sx={{\n              marginBottom: 3,\n              bgcolor: \"white\",\n              borderRadius: 1,\n            }}\n            fullWidth\n            label=\"Email\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            size=\"small\"\n            title=\"For example email@example.com\"\n            required\n          />\n        </Box>\n        <Box\n          sx={{\n            width: 300,\n            maxWidth: \"100%\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <TextField\n            sx={{\n              marginBottom: 3,\n              bgcolor: \"white\",\n              borderRadius: 1,\n            }}\n            fullWidth\n            label=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            size=\"small\"\n            title=\"Must contain at least 7 or more characters\"\n            required\n          />\n        </Box>\n\n        <Button type=\"submit\" variant=\"contained\" size=\"small\">\n          Registration\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","export default function validateEmailAndPsw(email) {\n\tconst re =\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\treturn re.test(String(email).toLowerCase());\n}\n"],"names":["Form","styled","LoginTitle","Button","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","validateEmail","toast","length","register","autoComplete","Box","sx","width","maxWidth","marginRight","marginLeft","TextField","marginBottom","bgcolor","borderRadius","fullWidth","label","id","type","onChange","size","pattern","title","required","padingBottom","variant","validateEmailAndPsw","test","String","toLowerCase"],"sourceRoot":""}